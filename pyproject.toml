[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "pybind11>=2.6",
    "setuptools>=42",
]

[project]
authors = [
    {name = "Ian Thomas"},
    {email = "ianthomas23@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "numpy >=1.16",
]
description = "Python library for calculating contours of 2D quadrilateral grids"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}
name = "contourpy"
readme = "README.md"
requires-python = ">=3.8"

[project.optional-dependencies]
docs = [
    "sphinx-rtd-theme",
]
bokeh = [
    "bokeh",
    "selenium",
    # Also need geckodriver and firefox, or chromedriver and chrome, for export to PNG/SVG/buffer.
]
test-minimal = [
    "pytest",
]
test-no-codebase = [
    # All test dependencies excluding codebase tests.
    "contourpy[test-minimal]",
    "matplotlib",
    "Pillow",
]
test = [
    # All test dependencies.
    "contourpy[test-no-codebase]",
    "flake8",
    "isort",
]

[project.urls]
documentation = "https://contourpy.readthedocs.io"
repository = "https://github.com/contourpy/contourpy"

[tool.setuptools]
platforms = ["any"]
zip-safe = false

[tool.setuptools.packages.find]
where = ["lib"]

[tool.cibuildwheel]
build-frontend = "build"
build-verbosity = "2"
build = "cp38-* cp39-* cp310-* cp311-* pp38-* pp39-*"
test-command = 'python -c "import contourpy as c; c.contour_generator(z=[[0, 1], [2, 3]]).lines(0.9)"'
# Only test combinations for which a numpy wheel exists, and macos universal unnecessary.
test-skip = "pp38-*-aarch64 pp39-* *musllinux* *-macosx_arm64 *-macosx_universal2"

[tool.cibuildwheel.linux]
archs = "auto aarch64"

[tool.cibuildwheel.macos]
archs = "x86_64 arm64 universal2"

[tool.isort]
force_sort_within_sections = true
multi_line_output = 5
profile = "hug"
skip_gitignore = true
