[build-system]
build-backend = "mesonpy"
requires = [
    "meson >= 1.2.0",
    "meson-python >= 0.13.1",
    "pybind11 >= 2.12.0",
]

[project]
authors = [
    {name = "Ian Thomas", email = "ianthomas23@gmail.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
]
dependencies = [
    "numpy >= 1.23",
]
description = "Python library for calculating contours of 2D quadrilateral grids"
dynamic = ["version"]
license = {file = "LICENSE"}
name = "contourpy"
readme = "README_simple.md"
requires-python = ">= 3.9"

[project.optional-dependencies]
docs = [
    "furo",
    "sphinx >= 7.2",
    "sphinx-copybutton",
]
bokeh = [
    # Optional dependencies to support use of bokeh renderer.
    # Also needs chrome/chromium and chromedriver for export to PNG/SVG/buffer.
    "bokeh",
    "selenium",
]
mypy = [
    # Requirements to run mypy to check type annotations.
    "contourpy[bokeh,docs]",
    "docutils-stubs",
    "mypy == 1.10.0",
    "types-Pillow",
]
test = [
    # Standard test dependencies.
    "contourpy[test-no-images]",
    "matplotlib",
    "Pillow",
]
test-no-images = [
    # Dependencies to run tests excluding image-generating tests.
    "pytest",
    "pytest-cov",
    "pytest-rerunfailures",
    "pytest-xdist",
    "wurlitzer",
]

[project.urls]
Homepage = "https://github.com/contourpy/contourpy"
Changelog = "https://contourpy.readthedocs.io/en/latest/changelog.html"
Documentation = "https://contourpy.readthedocs.io"
Repository = "https://github.com/contourpy/contourpy"


[tool.meson-python.args]
compile = [
    "-v",
]
dist = []
install = []
setup = [
    "--vsenv",  # Force use of MSVC on Windows, ignored on other platforms
]


[tool.cibuildwheel]
build-frontend = "build"
build = "cp{39,310,311,312,313}-* pp{39,310}-*_{amd64,x86_64}"
skip = "*-musllinux_{ppc64le,s390x}"
test-requires = "pytest"
test-command = [
    'python -c "from contourpy.util import build_config; from pprint import pprint; pprint(build_config())"',
    'pytest -v {project}/tests/test_minimal.py',
]
# Only test combinations for which a numpy wheel exists to avoid compiling numpy from source.
test-skip = "*_{ppc64le,s390x} cp313-*_aarch64"

[[tool.cibuildwheel.overrides]]
# For Python 3.13 install numpy from nightly wheels as not yet on PyPI.
select = "{cp313,pp310}-*"
before-test = "pip install --pre --extra-index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy"


[tool.codespell]
ignore-words-list = "nd"


[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "\\s+pass",
    "raise.*Invalid FillType",
    "raise.*Invalid LineType",
]


[tool.mypy]
files = ["lib/contourpy", "benchmarks", "docs", "tests"]
python_version = "3.10"

check_untyped_defs = true
enable_error_code = ["ignore-without-code", "truthy-bool"]
disallow_untyped_defs = true
no_implicit_optional = true
strict = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "asv.*",
    "asv_runner.*",
    "wurlitzer",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.test_internal"
disable_error_code = "call-arg"

[[tool.mypy.overrides]]
module = "tests.test_typecheck"
disable_error_code = ["arg-type", "list-item"]


[tool.ruff]
exclude = [
    "__pycache__",
    ".asv",
    ".git",
    ".mypy_cache",
    "build",
    "dist",
]
line-length = 100

[tool.ruff.lint]
ignore = [
    "PLW1510",
    "PLW2901",
]
select = [
    "B",
    "BLE",
    "C4",
    "COM",
    "E",
    "F",
    "FA",
    "FLY",
    "G",
    "I",
    "ICN",
    "INT",
    "NPY",
    "PERF",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PYI",
    "Q",
    "RSE",
    "RUF",
    "TCH",
    "TID",
    "UP",
    "W",
    "YTT",
]

[tool.ruff.lint.isort]
known-first-party = ["contourpy"]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"docs/sphinxext/name_supports.py" = ["E402"]
"docs/sphinxext/name_supports_type.py" = ["E402"]
"docs/sphinxext/plot_directive.py" = ["B009", "B010"]
"lib/contourpy/_contourpy.pyi" = ["E501", "PLW0406"]
