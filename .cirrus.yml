linux_aarch64_test_task:
  name: "Cirrus linux aarch64 ${PYTHON_VERSION} ${IMAGE_SUFFIX}"
  only_if: $CIRRUS_BRANCH != "main"

  arm_container:
    # https://hub.docker.com/_/python/
    image: python:${PYTHON_VERSION}-${IMAGE_SUFFIX}

  matrix:
    - env:
        PYTHON_VERSION: "3.11"
        IMAGE_SUFFIX: slim
        BUILD_NUMPY: 0
        TEST_NO_IMAGES: 0
    - env:
        PYTHON_VERSION: "3.11"
        IMAGE_SUFFIX: alpine
        BUILD_NUMPY: 1
        TEST_NO_IMAGES: 1

  os_dependencies_script: |
    if [[ "$IMAGE_SUFFIX" != "alpine" ]];
    then
      apt update;
      apt install -yy g++;
    else
      apk update;
      apk add build-base;
    fi

  python_venv_script: |
    which python
    python --version
    python -m pip install --upgrade pip
    python -m venv venv
    source venv/bin/activate

  install_numpy_from_source_script:
    if [[ "$BUILD_NUMPY" == "1" ]];
    then
      python -m pip install -v --no-binary=numpy numpy -Csetup-args="-Dallow-noblas=true";
    fi

  install_contourpy_script: |
    if [[ "$TEST_NO_IMAGES" ]];
    then
        python -m pip install -v .[test-no-images] -Cbuilddir=build;
    else
        python -m pip install -v .[test] -Cbuilddir=build;
    fi
    python -m pip list
    python -c "from contourpy.util import build_config; from pprint import pprint; pprint(build_config())"

  run_tests_script: |
    if [[ "$TEST_NO_IMAGES" ]];
    then
      python -m pytest -v tests/ -n 2 -k "not image";
    else
      python -m pytest -v tests/ -n 2;
    fi


macos_arm64_test_task:
  name: "Cirrus macos arm64 ${PYTHON_VERSION}"
  only_if: $CIRRUS_BRANCH != "main"

  macos_instance:
    # https://github.com/cirruslabs/macos-image-templates
    image: ghcr.io/cirruslabs/macos-monterey-xcode:14

  matrix:
    - env:
        PYTHON_VERSION: "3.10"

  os_dependencies_script: |
    brew install python@${PYTHON_VERSION}
    echo "PATH=/opt/homebrew/opt/python@${PYTHON_VERSION}/libexec/bin:$PATH" >> $CIRRUS_ENV

  python_venv_script: |
    env | grep PATH
    which python
    python --version
    python -m pip install --upgrade pip
    python -m venv venv
    source venv/bin/activate

  install_contourpy_script: |
    python -m pip install -v .[test] -Cbuilddir=build
    python -m pip list
    python -c "from contourpy.util import build_config; from pprint import pprint; pprint(build_config())"

  run_tests_script: |
    python -m pytest -v tests/ -n 4
