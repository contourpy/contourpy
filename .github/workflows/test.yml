name: Test

on: [push, pull_request]

jobs:
  test:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install -r requirements/install.txt
          python -m pip install -r requirements/test.txt
          python -m pip list

      - name: Install
        run: |
          python -m pip install --no-deps -ve .

      - name: Install cppcheck
        if: startsWith(runner.os, 'Linux')
        run: |
          sudo apt install -y cppcheck

      - name: Run tests
        run: |
          python -m pytest -v

      - name: Collect test image failures
        if: always()
        shell: bash
        run: |
          if [[ -e result_images ]];
          then
            DIR="test-artifacts/${{ matrix.os }}_${{ matrix.python-version }}"
            mkdir -p ${DIR}
            mv result_images/* ${DIR}/
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-artifacts
          path: test-artifacts/
