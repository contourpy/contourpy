name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Test ${{ matrix.python-version }} ${{ matrix.os }} ${{ matrix.debug == 1 && 'debug' || '' }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
        debug: [0]
        include:
          # Add debug build and test to matrix.
          - os: ubuntu-latest
            python-version: 3.9
            debug: 1

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install contourpy
        if: matrix.debug == 0
        run: |
          python -m pip install -ve .[test]
          python -m pip list

      - name: Install contourpy (debug)
        if: matrix.debug == 1
        run: |
          BUILD_DEBUG=1 BUILD_CXX11=1 python -m pip install -ve .[test]
          python -m pip list

      - name: Install cppcheck
        if: runner.os == 'Linux'
        run: |
          sudo apt install -y cppcheck

      - name: Run tests
        run: |
          python -m pytest -v

      - name: Collect test image failures
        if: always()
        shell: bash
        run: |
          if [[ -e result_images ]];
          then
            DIR="test-artifacts/${{ matrix.os }}_${{ matrix.python-version }}"
            mkdir -p ${DIR}
            mv result_images/* ${DIR}/
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-artifacts
          path: test-artifacts/
